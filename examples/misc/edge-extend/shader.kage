//kage:unit pixels
package main

var Cursor vec2 // in [0, 1] ranges, built-in with kage-desk/display

func Fragment(_ vec4, sourceCoords vec2, _ vec4) vec4 {
	// as an example, we offset sourceCoords based on the cursor
	// so we can go out of bounds and see the clamping in action
	modifiedCoords := sourceCoords + (Cursor - vec2(0.5))*200.0

	minSrc0, maxSrc0 := GetSource0ClampCoords()
	clampedCoords := clamp(modifiedCoords, minSrc0, maxSrc0)
	return imageSrc0UnsafeAt(clampedCoords)
}

func GetSource0ClampCoords() (vec2, vec2) {
	const epsilon = 1.0/16384.0 // TODO: how small can we safely set this?
	origin := imageSrc0Origin()
	return origin, (origin + imageSrc0Size()) - vec2(epsilon)
}
