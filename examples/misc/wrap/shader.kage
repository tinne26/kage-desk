//kage:unit pixels
package main

var Cursor vec2 // in [0, 1] ranges, built-in with kage-desk/display

func Fragment(_ vec4, sourceCoords vec2, _ vec4) vec4 {
	// as an example, we offset sourceCoords based on the cursor
	// so we can go out of bounds and see the clamping in action
	modifiedCoords := sourceCoords + (Cursor - vec2(0.5))*400.0

	originSrc0, endSrc0 := GetSource0Region()
	wrappedCoords := Wrap(modifiedCoords, originSrc0, endSrc0)
	return imageSrc0UnsafeAt(wrappedCoords)
}

func GetSource0Region() (vec2, vec2) {
	origin := imageSrc0Origin()
	return origin, origin + imageSrc0Size()
}

func Wrap(coords vec2, origin, end vec2) vec2 {
	return origin + mod(coords - origin, end - origin)
}
