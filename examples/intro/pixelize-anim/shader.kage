//kage:unit pixels
package main

var CellSize float // uniform: max value is MaxCellSize
const MaxCellSize float = 32.0

func Fragment(_ vec4, sourceCoords vec2, _ vec4) vec4 {
	// find the origin of the cell we are working with
	relativeSrcCoords := sourceCoords - imageSrc0Origin()
	cellOrigin := floor(relativeSrcCoords/CellSize)*CellSize

	// iterate the pixelization cell
	colorAcc := vec4(0.0) // color accumulator
	for y := 0.0; y < MaxCellSize; y += 1.0 {
		if y >= CellSize { break }
		for x := 0.0; x < MaxCellSize; x += 1.0 {
			if x >= CellSize { break }
			pixCoords := cellOrigin + vec2(x, y)
			colorAcc += imageSrc0At(pixCoords + imageSrc0Origin())
		}
	}

	// divide the color to average it
	return colorAcc/(CellSize*CellSize)
}
